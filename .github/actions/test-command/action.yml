name: 'Test command'
description: 'Test command'
inputs:
  name:
    description: 'name'
    required: false
    default: 'John'
  file:
    description: 'file'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - run: |
        set -eu

        #echo ${{ inputs.name }}
        #lower_name=$(echo ${{ inputs.name }} | tr '[A-Z]' '[a-z]')
        #echo ${lower_name}

        #IFS=, read -ra columns <<< $(head -1 ${{ inputs.file }})
        #newheader=''
        #for col in "${columns[@]}"; do
          #[[ -n "${newheader}" ]] && newheader="${newheader},"
          #lower_col=$(echo $col | tr '[A-Z]' '[a-z]')
          #echo ${lower_col}
          #newheader="${newheader}${col}"
        #done
        #echo ${newheader}

        val="Foo1"
        env name=${val} envsubst < ./.github/data/foo.json

        val="Foo2"
        jsonString=$(env name=${val} envsubst < ./.github/data/foo.json)
        echo $jsonString

        cat ./.github/data/data.json | jq '.data[] | select (.value != "${{ inputs.name }}").id'

        result=$(cat ./.github/data/data.json)
        echo ${result} | jq '.data[] | select (.value == "${{ inputs.name }}" | not).id'

        ids=$(echo ${result} | jq '.data[] | select (.value != "${{ inputs.name }}").id')
        echo $ids

      shell: bash
